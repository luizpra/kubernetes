apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  template:
    metadata:
      labels:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: grafana
      containers:
        - name: grafana
          image: "grafana/grafana:9.0.1"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: grafana-envs
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: storage-volume
              mountPath: /var/lib/grafana
            - name: config-volume
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: "datasources.yaml"
            - name: config-volume
              mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
              subPath: "dashboardproviders.yaml"              
            - name: dashboards-k8s
              mountPath: "/var/lib/grafana/dashboards/k8s"              
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      volumes:
        - name: config-volume
          configMap:
            name: grafana
        - name: dashboards-k8s
          configMap:
            name: dashboards-k8s

