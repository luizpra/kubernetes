apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-server
  template:
    metadata:
      labels:
        app: echo-server
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: echo-server
        image: ealen/echo-server
        ports:
        - containerPort: 80
---        
apiVersion: v1
kind: Service
metadata:
  name: echo-server
  # annotations:
  #   service.beta.kubernetes.io/do-loadbalancer-name: "echo.uat.do.4pm.dev"
  #   service.beta.kubernetes.io/do-loadbalancer-hostname: "echo.uat.do.4pm.dev"
  #   service.beta.kubernetes.io/do-loadbalancer-protocol: "https"
  #   service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: "true"
  #   service.beta.kubernetes.io/do-loadbalancer-certificate-id: "6c484f62-ee6e-4112-a49e-3438fa41d662"
  #   service.beta.kubernetes.io/do-loadbalancer-disable-lets-encrypt-dns-records: "false"
  #   service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "false"
spec:
  selector:
    app: echo-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
    - protocol: TCP
      port: 443
      targetPort: 443
      name: https  
  type: LoadBalancer
---
# apiVersion: networking.istio.io/v1alpha3
# kind: VirtualService
# metadata:
#   name: echo-server
# spec:
#   hosts:
#   - "echo-server.${CLUSTER_ENV}.${PROVIDER}.${BASE_DOMAIN}"
#   gateways:
#   - istio-system/istio-gateway
#   http:
#   - match:
#     - uri:
#         prefix: /
#     route:
#     - destination:
#         host: echo-server.default.svc.cluster.local
#         port:
#           number: 80
